@page "/serverStatus"

@rendermode InteractiveServer

@inject NavigationManager NavigationManager
@inject ContainerStorage ContainerStorage;

<h3>服务器状态</h3>

<br/>
@if (!string.IsNullOrWhiteSpace(_errorMessage))
{
    <div class="alert alert-danger">
        @_errorMessage
    </div>
}
@if (_server != null)
{
    
<FieldComponent Label="服务器状态">
    <Control>
        <input type="checkbox"
               @bind-value="@_server.IsOnline"
               class="form-check-input"/>
    </Control>
</FieldComponent>
<br/>
<button type="button" class="btn btn-primary" @onclick="Save">保存</button>

}
@code {

    private Server? _server;
    
    private string? _errorMessage;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _server = ContainerStorage.GetServer();
            StateHasChanged();
        }
    }

    private void Save()
    {
        if (_server == null)
            return;

        ContainerStorage.SetServer(null);
        ServersRepository.AddServer(_server);
        NavigationManager.NavigateTo($"/servers/back_from/{_server.City}");
    }

}