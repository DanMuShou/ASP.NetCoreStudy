
@if (Server != null)
{
  <tr style="background-color: @GetBackgroundColor()">
    <td>@Server.Name</td>
    <td>@Server.City</td>
    <td style="color:@(Server.IsOnline ? "green" : "red")">
      @(Server.IsOnline ? "在线" : "离线")
    </td>
    <td>
      @if (Server.IsOnline)
      {
        var random = new Random();
        var randomNumber = random.Next(0, 10000);
        <text>@randomNumber</text>
      }
      else
      {
        <text>N/A</text>
      }
    </td>
    <td>
      <button type="button"
              class="btn btn-outline-@(Server.IsOnline ? "danger" : "success")"
              @onclick="@(() => SetStateStatus(!Server.IsOnline))">@(Server.IsOnline ? "关闭" : "开启")</button>
      &nbsp;
      <a href="/server/@Server.ServerId" class="btn btn-outline-primary">编辑</a>
    </td>
    <td>
      <EditForm Model="Server" FormName="@($"form-server-{Server.ServerId}")"
                OnValidSubmit="@(() => { DeleteServer(Server.ServerId); })">
        <button type="submit" class="btn btn-primary">删除</button>
      </EditForm>
    </td>
  </tr>
}

@code {
  [Inject] public required IServersRepository ServersRepository { get; set; }
  [Inject] public required TorontoOnlineServersStore TorontoOnlineServersStore { get; set; }

  [Inject] public required NavigationManager NavigationManager { get; set; }

  [Parameter] public Server? Server { get; set; }

  [CascadingParameter(Name = "SelectedCity")]
  public string? SelectedCity { get; set; }

  private void DeleteServer(int serverId)
  {
    if (serverId <= 0) return;
    ServersRepository.DeleteServerByServerId(serverId);
    NavigationManager.NavigateTo("/servers", true);
  }

  private string GetBackgroundColor()
  {
    if (!string.IsNullOrEmpty(SelectedCity))
    {
      return SelectedCity switch
      {
        "Toronto" => "powderblue",
        "Montreal" => "lightgray",
        "Ottawa" => "palegreen",
        "Calgary" => "pink",
        "Halifax" => "white",
        _ => string.Empty
      };
    }

    return string.Empty;
  }

  private void SetStateStatus(bool status)
  {
    if (Server?.City == null || Server.IsOnline == status) return;

    if (Server.City.Equals("Toronto", StringComparison.OrdinalIgnoreCase))
    {
      var num = TorontoOnlineServersStore.GetNumberServersOnline();
      if (status)
        TorontoOnlineServersStore.SetNumbersServerOnline(num + 1);
      else if (num > 1)
        TorontoOnlineServersStore.SetNumbersServerOnline(num - 1);
    }

    Server.IsOnline = status;
    ServersRepository.UpdateServer(Server);
  }

}